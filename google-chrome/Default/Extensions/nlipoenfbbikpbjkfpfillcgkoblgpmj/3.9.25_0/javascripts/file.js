function errorHandler(a){var b="";switch(a.code){case FileError.QUOTA_EXCEEDED_ERR:b="QUOTA_EXCEEDED_ERR";break;case FileError.NOT_FOUND_ERR:b="NOT_FOUND_ERR";break;case FileError.SECURITY_ERR:b="SECURITY_ERR";break;case FileError.INVALID_MODIFICATION_ERR:b="INVALID_MODIFICATION_ERR";break;case FileError.INVALID_STATE_ERR:b="INVALID_STATE_ERR";break;default:b="Unknown Error"}return b}window.requestFileSystem=window.requestFileSystem||window.webkitRequestFileSystem;var fileSaver={fs:null,getFs:function(){return new Promise(function(a,b){window.requestFileSystem(window.PERSISTENT,52428800,function(b){a(b)},function(a){b(a)})})},save:function(a,b){var c=this;return this.getFs().then(function(d){return c.do_save(d,a,b)},errorHandler)},do_save:function(a,b,c){return new Promise(function(d,e){a.root.getFile(c,{create:!0},function(a){a.createWriter(function(c){c.onwriteend=function(b){d(a.toURL()),console.log("Write completed.",a,b)},c.onerror=function(a){e(a.toString()),console.log("Write failed: "+a.toString())},c.write(b)},function(a){e(a)})},function(a){e(a)})})}};